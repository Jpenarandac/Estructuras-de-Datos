/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblies;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cesar Rinc√≥n
 */
public class Interfaz extends javax.swing.JFrame {
    private static int cantidadTextos;
    public static ListaEnlazada listacodigo;
    public static ListaEnlazada listatitulo;
    public static ListaEnlazada listaautor;
    public static arbolAVL Acodigo;
    public static arbolAVL Atitulo;
    public static arbolAVL Aautor;
    private boolean /*CHECKarboles,CHECKlistas,seUsoCSV,*/invertir_tabla;
    private static ListaArrayDinamico resultados,creaciones;
    private static Admin defaultAdmin;
    private static Cliente defaultCliente;
    private static Usuario[] usuarios;
    private static int currentUser=0,n_users=2;
    java.awt.Color c_error;
    private Texto txt;
    

    /**
     * Creates new form Menu
     */
    public Interfaz() {
        listacodigo=Launcher.listacodigo;
        listatitulo=Launcher.listatitulo;
        listaautor= Launcher.listaautor;
        Acodigo=Launcher.Acodigo;
        Atitulo= Launcher.Atitulo;
        Aautor=Launcher.Aautor;
        cantidadTextos=Launcher.cantidadTextos;
        creaciones = new ListaArrayDinamico(13);
        resultados = new ListaArrayDinamico(26);
        c_error=java.awt.Color.getHSBColor(360,(float)0.5,1);
        defaultAdmin=Launcher.defaultAdmin;
        defaultCliente=Launcher.defaultCliente;
        usuarios=new Usuario[15];
        usuarios[0]=defaultAdmin;
        usuarios[1]=Launcher.defaultCliente;
        
        //=====================
        initComponents();
        this.setLocationRelativeTo(null);
        this.bgESTRUCTURA.add(this.RBlistas);
        this.bgESTRUCTURA.add(this.RBarboles);
        this.checkCondiciones();
        this.TABLABUSCAR.getTableHeader().setReorderingAllowed(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgESTRUCTURA = new javax.swing.ButtonGroup();
        bgELEGIRTIPODEUSUARIO = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        JPbuscar = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        CBopcionesBusqueda = new javax.swing.JComboBox<>();
        RBlistas = new javax.swing.JRadioButton();
        TFbuscar = new javax.swing.JTextField();
        RBarboles = new javax.swing.JRadioButton();
        BUSCAR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        miniConsolaTexto = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        JBcomentar = new javax.swing.JButton();
        JBagregarAFavoritos = new javax.swing.JButton();
        JBmodificar = new javax.swing.JButton();
        JBborrar = new javax.swing.JButton();
        SPINNERpuntuacion = new javax.swing.JSpinner();
        jScrollPane6 = new javax.swing.JScrollPane();
        miniconsolaComentarios = new javax.swing.JTextArea();
        JBpuntuar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        CBordenarPor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TABLABUSCAR = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        JBdeshacer = new javax.swing.JButton();
        JLaccionDeshacer = new javax.swing.JLabel();
        JPcrear = new javax.swing.JPanel();
        JLcrearTexto = new javax.swing.JLabel();
        JPmostrarDatosTabla = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTTABLACREAR = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        JBguardarTextosIngresados = new javax.swing.JButton();
        CHECKguardarEnArboles = new javax.swing.JCheckBox();
        CHECKguardarEnListas = new javax.swing.JCheckBox();
        CHECKguardarEnMySQL = new javax.swing.JCheckBox();
        JBclearCreaciones = new javax.swing.JButton();
        JBquitarUltimaCreacion = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        JPbotonagregar = new javax.swing.JPanel();
        JBcrearTexto = new javax.swing.JButton();
        JPingresarDatos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        JLtitulo = new javax.swing.JLabel();
        TFtitulo = new javax.swing.JTextField();
        JBautor = new javax.swing.JLabel();
        TFautor = new javax.swing.JTextField();
        JBfechaP = new javax.swing.JLabel();
        TFfecha = new javax.swing.JTextField();
        JBnumPaginas = new javax.swing.JLabel();
        TFpaginas = new javax.swing.JTextField();
        JBidioma = new javax.swing.JLabel();
        CBidioma = new javax.swing.JComboBox<>();
        JBtema = new javax.swing.JLabel();
        TFtema = new javax.swing.JTextField();
        jPinfo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        TFapellidoU = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TFcorreo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        TFnombreU = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        RBadmin = new javax.swing.JRadioButton();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPanel12 = new javax.swing.JPanel();
        CBnivelacademico = new javax.swing.JComboBox<>();
        RBcliente = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TFtextosrevisados = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        JBcrearUsuario = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        miniconsolaU = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        JBborrarUsuario = new javax.swing.JButton();
        JBusarUsuario = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JTlistaUsuarios = new javax.swing.JTable();
        bgELEGIRTIPODEUSUARIO.add(this.RBadmin);
        bgELEGIRTIPODEUSUARIO.add(this.RBcliente);
        this.RBcliente.setSelected(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CBopcionesBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar todos los textos (No escriba nada)", "Buscar por codigo", "Buscar por titulo", "Buscar por autor", "Buscar si empieza por..", "Buscar si contiene las palabras.." }));

        RBlistas.setText("Lista Enlazada");

        TFbuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        TFbuscar.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        TFbuscar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        TFbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFbuscarActionPerformed(evt);
            }
        });
        TFbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFbuscarKeyPressed(evt);
            }
        });

        RBarboles.setSelected(true);
        RBarboles.setText("Arbol AVL");

        BUSCAR.setText("Buscar");
        BUSCAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUSCARActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        miniConsolaTexto.setEditable(false);
        miniConsolaTexto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        miniConsolaTexto.setTabSize(0);
        miniConsolaTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(miniConsolaTexto);

        JBcomentar.setText("Comentar");

        JBagregarAFavoritos.setText("Agregar a favoritos");

        JBmodificar.setText("Modificar (Admin)");

        JBborrar.setText("Borrar (Admin)");
        JBborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBborrarActionPerformed(evt);
            }
        });

        SPINNERpuntuacion.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        SPINNERpuntuacion.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(5.0f), Float.valueOf(0.1f)));

        miniconsolaComentarios.setColumns(20);
        miniconsolaComentarios.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        miniconsolaComentarios.setRows(5);
        miniconsolaComentarios.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane6.setViewportView(miniconsolaComentarios);

        JBpuntuar.setText("Puntuar");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JBmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBcomentar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(JBagregarAFavoritos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                        .addComponent(JBborrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(SPINNERpuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JBpuntuar))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SPINNERpuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBpuntuar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JBagregarAFavoritos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBcomentar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBborrar))
                .addContainerGap())
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JBagregarAFavoritos, JBborrar, JBcomentar, JBmodificar});

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TFbuscar)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(RBlistas)
                                        .addGap(18, 18, 18)
                                        .addComponent(RBarboles)
                                        .addGap(18, 18, 18)
                                        .addComponent(CBopcionesBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBlistas)
                    .addComponent(RBarboles)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(CBopcionesBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        CBordenarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
        CBordenarPor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CBordenarPorMouseReleased(evt);
            }
        });

        jLabel1.setText("Ordenar por");

        TABLABUSCAR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CODIGO", "TITULO", "AUTOR", "FECHA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLABUSCAR.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        TABLABUSCAR.setFocusable(false);
        TABLABUSCAR.setRowHeight(25);
        TABLABUSCAR.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TABLABUSCAR.setUpdateSelectionOnSort(false);
        TABLABUSCAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TABLABUSCARMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(TABLABUSCAR);

        JBdeshacer.setText("Deshacer");
        JBdeshacer.setEnabled(false);

        JLaccionDeshacer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLaccionDeshacer.setText("Sin acciones");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(CBordenarPor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JLaccionDeshacer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBdeshacer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JLaccionDeshacer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CBordenarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(JBdeshacer)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JPbuscarLayout = new javax.swing.GroupLayout(JPbuscar);
        JPbuscar.setLayout(JPbuscarLayout);
        JPbuscarLayout.setHorizontalGroup(
            JPbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPbuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        JPbuscarLayout.setVerticalGroup(
            JPbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPbuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("    BUSCAR    ", JPbuscar);

        JLcrearTexto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JLcrearTexto.setText("           CREAR UN TEXTO");

        JTTABLACREAR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TITULO", "AUTOR", "FECHA", "PAGINAS", "IDIOMA", "TEMA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTTABLACREAR.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        JTTABLACREAR.setFocusable(false);
        JTTABLACREAR.setRowHeight(25);
        JTTABLACREAR.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JTTABLACREAR.setUpdateSelectionOnSort(false);
        jScrollPane3.setViewportView(JTTABLACREAR);

        JBguardarTextosIngresados.setText("GUARDAR");
        JBguardarTextosIngresados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBguardarTextosIngresadosActionPerformed(evt);
            }
        });

        CHECKguardarEnArboles.setText("Insertar en Arboles AVL");

        CHECKguardarEnListas.setText("Insertar en Listas Enlazadas");

        CHECKguardarEnMySQL.setText("Insertar en MySQL");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JBguardarTextosIngresados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CHECKguardarEnArboles, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CHECKguardarEnListas)
                    .addComponent(CHECKguardarEnMySQL, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CHECKguardarEnArboles, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(CHECKguardarEnListas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(CHECKguardarEnMySQL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JBguardarTextosIngresados, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CHECKguardarEnArboles, CHECKguardarEnListas, CHECKguardarEnMySQL});

        JBclearCreaciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JBclearCreaciones.setText("c");
        JBclearCreaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBclearCreacionesActionPerformed(evt);
            }
        });

        JBquitarUltimaCreacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JBquitarUltimaCreacion.setText("-");
        JBquitarUltimaCreacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBquitarUltimaCreacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPmostrarDatosTablaLayout = new javax.swing.GroupLayout(JPmostrarDatosTabla);
        JPmostrarDatosTabla.setLayout(JPmostrarDatosTablaLayout);
        JPmostrarDatosTablaLayout.setHorizontalGroup(
            JPmostrarDatosTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPmostrarDatosTablaLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(JPmostrarDatosTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JBquitarUltimaCreacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBclearCreaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 952, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        JPmostrarDatosTablaLayout.setVerticalGroup(
            JPmostrarDatosTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPmostrarDatosTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPmostrarDatosTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(JPmostrarDatosTablaLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addGroup(JPmostrarDatosTablaLayout.createSequentialGroup()
                        .addComponent(JBclearCreaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBquitarUltimaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        JBcrearTexto.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        JBcrearTexto.setText("+ ");
        JBcrearTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcrearTextoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPbotonagregarLayout = new javax.swing.GroupLayout(JPbotonagregar);
        JPbotonagregar.setLayout(JPbotonagregarLayout);
        JPbotonagregarLayout.setHorizontalGroup(
            JPbotonagregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPbotonagregarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JBcrearTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );
        JPbotonagregarLayout.setVerticalGroup(
            JPbotonagregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPbotonagregarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(JBcrearTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new java.awt.GridLayout(12, 0));

        JLtitulo.setText("TITULO");
        jPanel2.add(JLtitulo);

        TFtitulo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        TFtitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFtituloKeyReleased(evt);
            }
        });
        jPanel2.add(TFtitulo);

        JBautor.setText("AUTOR");
        jPanel2.add(JBautor);

        TFautor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFautorKeyReleased(evt);
            }
        });
        jPanel2.add(TFautor);

        JBfechaP.setText("FECHA DE PUBLICACI√ìN [MM/DD/YY]");
        jPanel2.add(JBfechaP);

        TFfecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFfechaKeyReleased(evt);
            }
        });
        jPanel2.add(TFfecha);

        JBnumPaginas.setText("N√öMERO DE P√ÅGINAS");
        jPanel2.add(JBnumPaginas);

        TFpaginas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFpaginasKeyReleased(evt);
            }
        });
        jPanel2.add(TFpaginas);

        JBidioma.setText("IDIOMA");
        jPanel2.add(JBidioma);

        CBidioma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afrikaans", "Alban√©s", "Alem√°n", "Amharico", "Arabe", "Armenio", "Bengali", "Bieloruso", "Birman√©s", "Bulgaro", "Catalan", "Checo", "Chino", "Coreano", "Croata", "Dan√©s", "Dari", "Dzongkha", "Escoc√©s", "Eslovaco", "Esloveniano", "Espa√±ol", "Esperanto", "Estoniano", "Faroese", "Farsi", "Finland√©s", "Franc√©s", "Gaelico", "Galese", "Gallego", "Griego", "Hebreo", "Hindi", "Holand√©s", "Hungaro", "Ingl√©s", "Indonesio", "Inuktitut (Eskimo)", "Islandico", "Italiano", "Japon√©s", "Khmer", "Kurdo", "Lao", "Laponico", "Latviano", "Lituano", "Macedonio", "Malay√©s", "Malt√©s", "Nepali", "Noruego", "Occitano", "Pashto", "Polaco", "Portugu√©s", "Quechua ", "Quirguiz ", "Rumano", "Ruso", "Serbio", "Somali", "Suahili", "Sueco", "Tagalog-Filipino", "Tajik", "Tamil", "Tailand√©s", "Tibetano", "Tigrinia", "Tongan√©s", "Turco", "Turkmenistano", "Ucraniano", "Urdu", "Uzbekistano", "Vasco", "Vietnam√©s", " " }));
        CBidioma.setSelectedIndex(21);
        jPanel2.add(CBidioma);

        JBtema.setText("TEMA");
        jPanel2.add(JBtema);

        TFtema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFtemaActionPerformed(evt);
            }
        });
        TFtema.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFtemaKeyReleased(evt);
            }
        });
        jPanel2.add(TFtema);

        javax.swing.GroupLayout JPingresarDatosLayout = new javax.swing.GroupLayout(JPingresarDatos);
        JPingresarDatos.setLayout(JPingresarDatosLayout);
        JPingresarDatosLayout.setHorizontalGroup(
            JPingresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPingresarDatosLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        JPingresarDatosLayout.setVerticalGroup(
            JPingresarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPingresarDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPingresarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPbotonagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JPbotonagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(JPingresarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout JPcrearLayout = new javax.swing.GroupLayout(JPcrear);
        JPcrear.setLayout(JPcrearLayout);
        JPcrearLayout.setHorizontalGroup(
            JPcrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPmostrarDatosTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(JPcrearLayout.createSequentialGroup()
                .addGroup(JPcrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(JPcrearLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JLcrearTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(115, 115, 115)))
                .addContainerGap())
        );
        JPcrearLayout.setVerticalGroup(
            JPcrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPcrearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JLcrearTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPmostrarDatosTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("    CREAR    ", JPcrear);

        jPinfo.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CREAR UN USUARIO");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setText("NOMBRE");

        jLabel7.setText("CORREO");

        jLabel6.setText("APELLIDO");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("CONTRASE√ëA");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("CONFIRMAR CONTRASE√ëA");

        RBadmin.setText("ADMIN");
        RBadmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RBadminMousePressed(evt);
            }
        });
        RBadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBadminActionPerformed(evt);
            }
        });

        CBnivelacademico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Primaria", "Bachiller", "Bachiller t√©cnico", "Tecn√≥logo", "Universidad pregrado", "Universidad posgrado", "DIOS" }));

        RBcliente.setText("CLIENTE");
        RBcliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RBclienteMousePressed(evt);
            }
        });

        jLabel10.setText("Nivel acad√©mico");

        jLabel11.setText("Textos revisados");

        TFtextosrevisados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFtextosrevisadosKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBcliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(CBnivelacademico, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(TFtextosrevisados))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RBcliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBnivelacademico, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addGap(27, 27, 27)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(TFtextosrevisados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPasswordField2)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(168, 168, 168)
                        .addComponent(RBadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPasswordField1)
                    .addComponent(TFnombreU, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TFapellidoU, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TFcorreo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFnombreU, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFapellidoU, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TFcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JBcrearUsuario.setText("CREAR");
        JBcrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcrearUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JBcrearUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JBcrearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPinfo.add(jPanel1);

        jPanel5.setBackground(new java.awt.Color(196, 240, 240));

        miniconsolaU.setColumns(20);
        miniconsolaU.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        miniconsolaU.setRows(5);
        jScrollPane5.setViewportView(miniconsolaU);

        jPanel10.setBackground(new java.awt.Color(196, 240, 240));

        JBborrarUsuario.setText("BORRAR");
        JBborrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBborrarUsuarioActionPerformed(evt);
            }
        });

        JBusarUsuario.setText("USAR");
        JBusarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBusarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JBborrarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(163, 163, 163)
                .addComponent(JBusarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBborrarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBusarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(196, 240, 240));

        jLabel4.setBackground(new java.awt.Color(196, 240, 240));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LISTA DE USUARIOS");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        JTlistaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "NOMBRE COMPLETO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTlistaUsuarios.setRowHeight(40);
        JTlistaUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JTlistaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JTlistaUsuariosMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(JTlistaUsuarios);
        this.JTlistaUsuarios.setValueAt(usuarios[0].getNombre()+ " "+usuarios[0].getApellido(),0,0);
        this.JTlistaUsuarios.setValueAt(usuarios[1].getNombre()+ " "+usuarios[1].getApellido(),1,0);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPinfo.add(jPanel5);

        jTabbedPane2.addTab("    INFO    ", jPinfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFtemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFtemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFtemaActionPerformed

    private void BUSCARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUSCARActionPerformed
        //BOTON BUSCAR

        /*/lista
        0--> listar todos los textos
        1--> buscar por codigo
        2--> buscar por titulo
        3--> buscar por autor
        4--> buscar si empieza por..
        5--> buscar si contiene las palabras..
        /*/
        
        System.out.println("\n\nindex antes: "+this.CBordenarPor.getSelectedIndex());
         //Orden descendente?
        this.invertir_tabla=this.CBordenarPor.getSelectedIndex()==1;
        System.out.println("\n\nindex ahora: "+this.CBordenarPor.getSelectedIndex());
        int tipoDeBusqueda = this.CBopcionesBusqueda.getSelectedIndex();
        if(tipoDeBusqueda==0){
        String s = "\n\nPor temas de recursos usted ver√° los textos en la consola, √©cheles un vistazo: \n\n";
        this.miniConsolaTexto.setText(s);
        }
           
            
        boolean arboles = this.RBarboles.isSelected();
        clearTable(this.TABLABUSCAR,resultados);
        resultados = new ListaArrayDinamico(26);
        String S=this.TFbuscar.getText().trim();//////////////////////// palabra(s)
        
        
        if(S.isEmpty() && tipoDeBusqueda!=0)
            return;
        long inicio;
        
        resizeTable(TABLABUSCAR,50);
        if (arboles) { //arboles AVL
            switch (tipoDeBusqueda) {
                case 0:
                    pausa(500);
                    try {
                        inicio=System.nanoTime();
                        Acodigo.inOrder();
                        System.out.println("\nLISTAR TEXTOS (ARBOLES AVL): "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                    } catch (Exception e) {
                        System.out.println("\n\n\n Lo siento no aguant√©: "+e);
                    }
                break;
                case 1:
                    Texto t=null;
                    try{
                        int codigo= Integer.parseInt(S);
                        inicio=System.nanoTime();
                        t=Acodigo.find(codigo);
                        this.miniConsolaTexto.setText("\nBUSQUEDA AVL POR CODIGO: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA AVL POR CODIGO: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                        
                    }catch(NumberFormatException e){
                        System.out.println(e);
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nIngrese un codigo valido");
                    }
                    if(t==null){
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nNo se encontr√≥");
                        return;
                    }
                        
                    resultados.add(t);
                    insertInTable(this.TABLABUSCAR,resultados,1);

                break;
                case 2: //titulo
                    
                    
                     inicio=System.nanoTime();
                        t=Atitulo.find(S);
                        this.miniConsolaTexto.setText("\nBUSQUEDA AVL POR TITULO: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA AVL POR TITULO: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                        if(t==null)
                            return;
                        resultados.add(t);
                        insertInTable(this.TABLABUSCAR,resultados,1);

                break;
                case 3: //autor

                    inicio=System.nanoTime();
                        t=Aautor.find(S);
                        this.miniConsolaTexto.setText("\nBUSQUEDA AVL POR AUTOR: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA AVL POR AUTOR: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                        //System.out.println("CONDICION DE Aautor: "+Aautor.condicion);
                        if(t==null){
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nNo se encontr√≥");
                        return;
                    }
                        resultados.add(t);
                        insertInTable(this.TABLABUSCAR,resultados,1);

                break;
                
                
                case 4: //startWith...
                    if(S.length()<2){
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nDebe ingresar mas de un caracter");
                        return;
                    }
                        inicio=System.nanoTime();
                        arbolAVL.counter=0;
                        resultados=Atitulo.findStartsWith(S);
                        //System.out.println("CONDICION DE Atitulo: "+Atitulo.condicion);
                         this.miniConsolaTexto.setText("\nBUSQUEDA AVL POR EMPIEZA POR.. : Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA AVL POR STAR WHIT: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                        if(resultados==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                        insertInTable(this.TABLABUSCAR,resultados,resultados.getSize());
                break;
                
                case 5: // buscar si contiene las palabras..
                    arbolAVL.counter=0;
                    inicio = System.nanoTime();
                    resultados = Atitulo.findContains(S);
                     this.miniConsolaTexto.setText("\nBUSQUEDA AVL POR CONTIENE LA PALABRA.. : Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                    System.out.println("\nBUSQUEDA AVL POR CONTAINS: " + Launcher.timestamp(inicio, System.nanoTime())+"\n\n");
                   if(resultados==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                    insertInTable(this.TABLABUSCAR,resultados,resultados.getSize());
                break;

            }

        } else { //listas enlazadas
            
             
          //this.miniConsolaTexto.setText(this.miniConsolaTexto.getText() +"\n\n\ntama√±o lcodigo: "+listacodigo.tamano+"\nltitulo: "+listatitulo.tamano+""
                //+ "\nlautor: "+listaautor.tamano);
          
          
            switch (tipoDeBusqueda) {
                case 0: //listar todo
                 
                    pausa(500);
                    try {
                         inicio = System.nanoTime();
                        defaultAdmin.imprimirTextos(listacodigo);
                        System.out.println("\nLISTAR TEXTOS (Listas Enlazadas): "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                    } catch (Exception e) {
                         System.out.println("\n\n\n Lo siento no aguant√©: "+e);
                    }
                    
                break;
                case 1://codigo
                    Texto t=null;
                    try{
                        int codigo= Integer.parseInt(S);
                        inicio=System.nanoTime();
                        
                        t=defaultAdmin.buscarPorCodigoQuickSearch(codigo, listacodigo.toListaArrayDinamico());
                        this.miniConsolaTexto.setText("\nBUSQUEDA ListaEnlazada POR CODIGO: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA LISTAS POR CODIGO: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                    }catch(Exception e){
                        System.out.println(e);
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nIngrese un codigo valido");
                    }
                     if(t==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                    resultados.add(t);
                    insertInTable(this.TABLABUSCAR, resultados, resultados.getSize());


                break;
                case 2: //titulo
                  
                    inicio=System.nanoTime();
                        
                        t=defaultAdmin.buscarPorTituloExactoQuickSearch(S, listatitulo.toListaArrayDinamico());
                         this.miniConsolaTexto.setText("\nBUSQUEDA ListaEnlazada POR TITULO: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                        System.out.println("\nBUSQUEDA LISTAS POR TITULO: "+Launcher.timestamp(inicio,System.nanoTime())+"\n\n");
                    if (t == null) {
                        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText() + "\n\nSin resultados..");
                        return;
                    }
                    resultados.add(t);
                    insertInTable(this.TABLABUSCAR, resultados, resultados.getSize());


                break;
                
                
                
                
                case 3: //autor
                    
                    inicio=System.nanoTime();
                    resultados=defaultAdmin.buscarPorAutorExactoQuickSearch(S, listaautor.toListaArrayDinamico());
                    this.miniConsolaTexto.setText("\nBUSQUEDA ListaEnlazada POR AUTOR: Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                     if(resultados==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                    insertInTable(this.TABLABUSCAR,resultados,resultados.getSize());
                    
                    
                break;
                case 4: //startWiths
                    inicio = System.nanoTime();
                    resultados = defaultAdmin.buscarEmpiezaPorQuickSearch(S, listatitulo.toListaArrayDinamico());
                   this.miniConsolaTexto.setText("\nBUSQUEDA ListaEnlazada Empieza por.. : Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                    System.out.println("BUSQUEDA LISTAS Empieza por..  : " + Launcher.timestamp(inicio, System.nanoTime())+"\n\n");
                    if(resultados==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                    insertInTable(this.TABLABUSCAR,resultados,resultados.getSize());

                    break;
                case 5: //contains
                     inicio = System.nanoTime();
                     resultados = listatitulo.containsPalabra(S).toListaArrayDinamico();
                     this.miniConsolaTexto.setText("\nBUSQUEDA ListaEnlazada Contiene la palabra..  : Tiempo en Nanosegundos: "+(System.nanoTime()-inicio)+"\n\n");
                      System.out.println("BUSQUEDA LISTAS Contiene la palabra..  : " + Launcher.timestamp(inicio, System.nanoTime())+"\n\n");
                      if(resultados==null){
                            this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nSin resultados..");
                            return;
                        }
                    insertInTable(this.TABLABUSCAR,resultados,resultados.getSize());

                break;

            }

        }

    }//GEN-LAST:event_BUSCARActionPerformed

    private void TFbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFbuscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BUSCARActionPerformed(null);
            //this.BUSCAR
        }
    }//GEN-LAST:event_TFbuscarKeyPressed

    private void TFbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFbuscarActionPerformed

    private void JBcrearTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcrearTextoActionPerformed
        String titulo,autor,fecha,idioma,tema,paginas_temp;
        int codigo, n_paginas;
        //=============================================== FILTRO DE ERRORES
        paginas_temp=TFpaginas.getText().trim();
        int returns=0;
        if(!isNumber(paginas_temp) || paginas_temp.isEmpty()){
           //System.out.println("HAY ERROR DE PAGINAS, VACIO STRING");
           this.TFpaginas.setBackground(c_error);
           returns++;
           }else{
            this.TFpaginas.setBackground(java.awt.Color.WHITE);
        }
        
        if((titulo=this.TFtitulo.getText().trim()).isEmpty()){
            this.TFtitulo.setBackground(c_error);
            returns++;
            }else{
            this.TFtitulo.setBackground(java.awt.Color.WHITE);
        }
        if((autor=this.TFautor.getText().trim()).isEmpty()){
            this.TFautor.setBackground(c_error);
            returns++;
            }else{
            this.TFautor.setBackground(java.awt.Color.WHITE);
        }
        if((fecha=this.TFfecha.getText().trim()).isEmpty()){
            this.TFfecha.setBackground(c_error);
            returns++;
            }else{
            this.TFfecha.setBackground(java.awt.Color.WHITE);
        }
        if((tema=this.TFtema.getText().trim()).isEmpty()){
            this.TFtema.setBackground(c_error);
            returns++;
            }else{
            this.TFtema.setBackground(java.awt.Color.WHITE);
        }
        
        if(returns!=0 )
            return;
        
        n_paginas=Integer.parseInt(paginas_temp);
        //================================================
     
        if(!equalsToLastRow(JTTABLACREAR, creaciones, titulo, autor, fecha, CBidioma.getItemAt(CBidioma.getSelectedIndex()), tema)){ //para evitar repetidos 
        System.out.println("ACCION 2");
        //txt = new Texto(codigo,titulo,autor,fecha,n_paginas,CBidioma.getItemAt(CBidioma.getSelectedIndex()),tema);
        
        System.out.println("ACCION 3");
        int i = creaciones.getSize();
        //this.JTTABLACREAR.setValueAt(codigo, i, 0);
        this.JTTABLACREAR.setValueAt(titulo, i, 0);
        this.JTTABLACREAR.setValueAt(autor, i, 1);
        this.JTTABLACREAR.setValueAt(fecha, i, 2);
        this.JTTABLACREAR.setValueAt(n_paginas, i, 3);
        this.JTTABLACREAR.setValueAt(this.CBidioma.getSelectedItem(), i, 4);
        this.JTTABLACREAR.setValueAt(tema, i, 5);
        //creaciones.add(txt);
        }
        
    }//GEN-LAST:event_JBcrearTextoActionPerformed

    private void TFtituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFtituloKeyReleased
        // TODO add your handling code here:
        if(!TFtitulo.getText().trim().isEmpty())
            this.TFtitulo.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_TFtituloKeyReleased

    private void TFautorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFautorKeyReleased
        // TODO add your handling code here:
        if(!TFautor.getText().trim().isEmpty())
            this.TFautor.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_TFautorKeyReleased

    private void TFfechaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFfechaKeyReleased
        // TODO add your handling code here:
        if(!TFfecha.getText().trim().isEmpty())
            this.TFfecha.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_TFfechaKeyReleased

    private void TFtemaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFtemaKeyReleased
        // TODO add your handling code here:
           if(!TFtema.getText().trim().isEmpty())
            this.TFtema.setBackground(java.awt.Color.WHITE);   if(!TFfecha.getText().trim().isEmpty());
    }//GEN-LAST:event_TFtemaKeyReleased

    private void TFpaginasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFpaginasKeyReleased
        // TODO add your handling code here:
        String temp=TFpaginas.getText().trim();
        if(!(temp.isEmpty()) &&  isNumber(temp))
            this.TFpaginas.setBackground(java.awt.Color.WHITE);   if(!TFfecha.getText().trim().isEmpty());
    }//GEN-LAST:event_TFpaginasKeyReleased

    private void JBclearCreacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBclearCreacionesActionPerformed
        // TODO add your handling code here:
        clearTable(this.JTTABLACREAR,creaciones);
        
    }//GEN-LAST:event_JBclearCreacionesActionPerformed

    private void JBquitarUltimaCreacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBquitarUltimaCreacionActionPerformed
        // TODO add your handling code here:
     removeLastRow(this.JTTABLACREAR,creaciones);
    }//GEN-LAST:event_JBquitarUltimaCreacionActionPerformed

    private void TABLABUSCARMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABLABUSCARMousePressed
        String s = null,s1[];

        //SELECCIONAR UN ELEMENTO DE LA TABLA DE RESULTADOS
        int tipoTexto=0; // 0--> texto (default), 1--> articulo, 2--> revista
        Texto t= resultados.get(this.TABLABUSCAR.getSelectedRow());
        if(t==null){
            this.miniConsolaTexto.setText("");
            return;
        }
        
        if(t instanceof Articulo){//si es articulo....
             Articulo a = (Articulo) t;
            s = "\n*ARTICULO*'\n\nTitulo: " + a.getTitulo() + "\nAutor: " + a.getAutor() + "\nFecha de publicaci√≥n: " + a.getFechaPublicacion() + "\nCalificacion: " + a.getCalificacion()
                    + "\nIndex: " + a.getIndex() + " \n\nCOMENTARIOS:\n\n";
        }else if(t instanceof Revista){ //si es revista....
             Revista r = (Revista) t;
                s = "\n*REVISTA*\n\nTitulo: " + r.getTitulo() + "\nAutor: " + r.getAutor() + "\nFecha de publicaci√≥n: " + r.getFechaPublicacion() + "\nCalificacion: " + r.getCalificacion()
                        + "\nNumero: +" + r.getNumero() + "\nSerie: " + r.getSerie() + "\n\nCOMENTARIOS:\n\n";
        }else{  //si solo es texto;
             s = "\n*TEXTO EST√ÅNDAR*\n\nTitulo: " + t.getTitulo() + "\nAutor: " + t.getAutor() + "\nFecha de publicaci√≥n: " + t.getFechaPublicacion() + "\nCalificacion: " + t.getCalificacion()
                        + "\n\nCOMENTARIOS:\n\n";
        }
        
         s1=t.getComentarios().getDato();
        for(String s2:s1){
            if(s2==null || s2.isEmpty()){
               
            }else{
            s+=s2+"\n";
            }
        }
        
        this.miniConsolaTexto.setText(s);
        
        
    }//GEN-LAST:event_TABLABUSCARMousePressed

    private void RBadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBadminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBadminActionPerformed

    private void JBcrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcrearUsuarioActionPerformed
        //boton CREAR UN USUARIO
        String nombre, apellido, correo, contrase√±a, ccontrase√±a;
        nombre = this.TFnombreU.getText();
        apellido = this.TFapellidoU.getText();
        correo = this.TFcorreo.getText();
        contrase√±a = this.jPasswordField1.getPassword().toString();
        ccontrase√±a = this.jPasswordField2.getPassword().toString();
        if(contrase√±a==null || ccontrase√±a==null)
            return;
        if (nombre == null && apellido == null && correo == null && !(contrase√±a.equals(ccontrase√±a))) {
            return;
        }
        String xnomb,xapellid,xcorreo;//obtenemos la ulta fila con datos para comparar si es lo mismo
        xnomb=usuarios[n_users-1].getNombre();
        xapellid=usuarios[n_users-1].getApellido();
        xcorreo=usuarios[n_users-1].getCorreo();
        
        if(xnomb.equals(nombre) && xapellid.equals(apellido) && xcorreo.equals(correo))
            return;

        String tr = "";
        if (this.RBadmin.isSelected()) {
            usuarios[n_users] = new Admin(n_users, nombre, apellido, correo, contrase√±a);
            n_users++;
        } else {
            tr = this.TFtextosrevisados.getText();

            if (tr != null) {
                if (isNumber(tr)) {
                    int i = this.CBnivelacademico.getSelectedIndex();
                    usuarios[n_users] = new Cliente(this.CBnivelacademico.getItemAt(i), Integer.parseInt(tr), n_users, nombre, apellido, correo, contrase√±a);
                    n_users++;
                }
            }
        }
        
        this.JTlistaUsuarios.setValueAt(nombre+" "+apellido, n_users-1, 0);

    }//GEN-LAST:event_JBcrearUsuarioActionPerformed

    private void RBclienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RBclienteMousePressed
        // TODO add your handling code here:
         this.RBadmin.setSelected(false);
        this.TFtextosrevisados.setEnabled(true);
        this.CBnivelacademico.setEnabled(true);
    }//GEN-LAST:event_RBclienteMousePressed

    private void JTlistaUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTlistaUsuariosMousePressed
        // TODO add your handling code here:
        int i= this.JTlistaUsuarios.getSelectedRow();
        if(i!=-1 && i<n_users)
            try{
                Cliente c= (Cliente)usuarios[i];
                this.miniconsolaU.setText(usuarios[i].toString()+"\nFavoritos:\n"+c.getFavoritos().toListaArrayDinamico().toString()+"\nTextos por leer: \n"+c.getLibrosPorLeer().toString());
            
            }catch(Exception e){
                this.miniconsolaU.setText(usuarios[i].toString());
            }
        
    }//GEN-LAST:event_JTlistaUsuariosMousePressed

    private void RBadminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RBadminMousePressed
        // TODO add your handling code here:
         this.RBcliente.setSelected(false);
        this.TFtextosrevisados.setEnabled(false);
        this.CBnivelacademico.setEnabled(false);
    }//GEN-LAST:event_RBadminMousePressed

    private void JBborrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBborrarUsuarioActionPerformed
        // TODO add your handling code here:
        String n= this.JTlistaUsuarios.getValueAt(this.JTlistaUsuarios.getSelectedRow(), 0).toString();
        int confirmar =JOptionPane.showConfirmDialog(this.JBborrarUsuario, "Se borrar√°n todos los datos de\n"+n,"Confirmar eliminaci√≥n", JOptionPane.YES_NO_OPTION);
        if(confirmar==JOptionPane.YES_OPTION){
            n_users--;
            usuarios[n_users]=null;
            this.JTlistaUsuarios.setValueAt(null, n_users, 0);
        }
    }//GEN-LAST:event_JBborrarUsuarioActionPerformed

    private void TFtextosrevisadosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFtextosrevisadosKeyReleased
        // TODO add your handling code here:
        String s= this.TFtextosrevisados.getText();
        if(s==null)
            return;
        if(!(isNumber(s.trim())) && !(s.trim().isEmpty()) )
            this.TFtextosrevisados.setBackground(c_error);
        else
            this.TFtextosrevisados.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_TFtextosrevisadosKeyReleased

    private void JBguardarTextosIngresadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBguardarTextosIngresadosActionPerformed
        // TODO add your handling code here:
        
        
        //NOTA: TAMA√ëO DE FILAS DE LA TABLA CREAR TEXTOS--> 25
        int size = this.JTTABLACREAR.getRowCount();
        /*
        Object[][size]
        int size = this.JTTABLACREAR.getRowCount();
        for (int i = 0; i < size; i++) {
            
        }
        */
        int CODIGO_TEMPORAL=-1;
        
        ResultSet rs= Launcher.ejecutarSentenciaSQL("SELECT * FROM "+Launcher.TABLA+" ORDER BY ID DESC LIMIT 1;");
        int decidir=0;
        if (this.CHECKguardarEnMySQL.isSelected() && rs == null) {  //conexion perdida
            decidir = JOptionPane.showConfirmDialog(null, "Se ha desconectado de la base de datos\npodr√° trabajar los datos localmente pero se borrar√°n al cerrar el programa\ndesea continuar?", "No hay coneccion SQL, valla y prenda el server :v", JOptionPane.YES_NO_OPTION);
            if (decidir == JOptionPane.NO_OPTION || decidir == JOptionPane.CLOSED_OPTION) {
                return;
            }
            
             this.CHECKguardarEnMySQL.setEnabled(false);
             this.CHECKguardarEnMySQL.setSelected(false);
                if(this.CHECKguardarEnListas.isSelected())
                    CODIGO_TEMPORAL= 1+ listacodigo.tamano;
                else if(this.CHECKguardarEnArboles.isSelected())
                    CODIGO_TEMPORAL= 1+ Acodigo.getSize();
        }
        
        
        
        if(this.CHECKguardarEnArboles.isEnabled())
            
        if(this.CHECKguardarEnListas.isEnabled())
            
        
        if(this.CHECKguardarEnMySQL.isEnabled()){
            try {
                CODIGO_TEMPORAL=rs.getInt(1);
            } catch (SQLException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            
        }
            
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_JBguardarTextosIngresadosActionPerformed

    private void CBordenarPorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CBordenarPorMouseReleased
        // TODO add your handling code here:
        
        //==============================================================================================================================================================================================
        
        
        
        
        
    }//GEN-LAST:event_CBordenarPorMouseReleased

    private void JBusarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBusarUsuarioActionPerformed
        // TODO add your handling code here:
        Interfaz.currentUser=this.JTlistaUsuarios.getSelectedRow();
        
        if(usuarios[currentUser]==null)
            return;
        boolean isCliente=usuarios[currentUser] instanceof Cliente;
            this.JBpuntuar.setEnabled(isCliente);
            this.JBcomentar.setEnabled(isCliente);
            this.JBagregarAFavoritos.setEnabled(isCliente);
            
            this.JBborrar.setEnabled(!isCliente);
            this.JBmodificar.setEnabled(!isCliente);
        
    }//GEN-LAST:event_JBusarUsuarioActionPerformed

    private void JBborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBborrarActionPerformed
        // TODO add your handling code here:
        Texto t=this.resultados.get(this.TABLABUSCAR.getSelectedRow());
        long inicio= System.nanoTime();
        Acodigo.remove(t);
        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nBorrado en arboles, tiempo en NANO: "+(System.nanoTime()-inicio));
        Atitulo.remove(t);
        Aautor.remove(t);
        inicio=System.nanoTime();
        listacodigo.remove(t);
        this.miniConsolaTexto.setText(this.miniConsolaTexto.getText()+"\n\nBorrado en LISTAS, tiempo en NANO: "+(System.nanoTime()-inicio));
        listatitulo.remove(t);
        listaautor.remove(t);
    }//GEN-LAST:event_JBborrarActionPerformed

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel 
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    
    
    private static ListaArrayDinamico buscar(String s){
        ListaArrayDinamico resultados;
        return null;
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BUSCAR;
    private javax.swing.JComboBox<String> CBidioma;
    private javax.swing.JComboBox<String> CBnivelacademico;
    private javax.swing.JComboBox<String> CBopcionesBusqueda;
    private javax.swing.JComboBox<String> CBordenarPor;
    private javax.swing.JCheckBox CHECKguardarEnArboles;
    private javax.swing.JCheckBox CHECKguardarEnListas;
    private javax.swing.JCheckBox CHECKguardarEnMySQL;
    private javax.swing.JButton JBagregarAFavoritos;
    private javax.swing.JLabel JBautor;
    private javax.swing.JButton JBborrar;
    private javax.swing.JButton JBborrarUsuario;
    private javax.swing.JButton JBclearCreaciones;
    private javax.swing.JButton JBcomentar;
    private javax.swing.JButton JBcrearTexto;
    private javax.swing.JButton JBcrearUsuario;
    private javax.swing.JButton JBdeshacer;
    private javax.swing.JLabel JBfechaP;
    private javax.swing.JButton JBguardarTextosIngresados;
    private javax.swing.JLabel JBidioma;
    private javax.swing.JButton JBmodificar;
    private javax.swing.JLabel JBnumPaginas;
    private javax.swing.JButton JBpuntuar;
    private javax.swing.JButton JBquitarUltimaCreacion;
    private javax.swing.JLabel JBtema;
    private javax.swing.JButton JBusarUsuario;
    private javax.swing.JLabel JLaccionDeshacer;
    private javax.swing.JLabel JLcrearTexto;
    private javax.swing.JLabel JLtitulo;
    private javax.swing.JPanel JPbotonagregar;
    private javax.swing.JPanel JPbuscar;
    private javax.swing.JPanel JPcrear;
    private javax.swing.JPanel JPingresarDatos;
    private javax.swing.JPanel JPmostrarDatosTabla;
    private javax.swing.JTable JTTABLACREAR;
    private javax.swing.JTable JTlistaUsuarios;
    private javax.swing.JRadioButton RBadmin;
    private javax.swing.JRadioButton RBarboles;
    private javax.swing.JRadioButton RBcliente;
    private javax.swing.JRadioButton RBlistas;
    private javax.swing.JSpinner SPINNERpuntuacion;
    private javax.swing.JTable TABLABUSCAR;
    private javax.swing.JTextField TFapellidoU;
    private javax.swing.JTextField TFautor;
    private javax.swing.JTextField TFbuscar;
    private javax.swing.JTextField TFcorreo;
    private javax.swing.JTextField TFfecha;
    private javax.swing.JTextField TFnombreU;
    private javax.swing.JTextField TFpaginas;
    private javax.swing.JTextField TFtema;
    private javax.swing.JTextField TFtextosrevisados;
    private javax.swing.JTextField TFtitulo;
    private javax.swing.ButtonGroup bgELEGIRTIPODEUSUARIO;
    private javax.swing.ButtonGroup bgESTRUCTURA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPanel jPinfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea miniConsolaTexto;
    private javax.swing.JTextArea miniconsolaComentarios;
    private javax.swing.JTextArea miniconsolaU;
    // End of variables declaration//GEN-END:variables

    
    
    
    static boolean isNumber(String n){
        return n.toLowerCase().equals(n.toUpperCase());
    }
    
    public static void clearTable( JTable table,ListaArrayDinamico lista) {
        //System.out.println("AQUI SE LIMPIA LA TABLA\nnumero de filas: "+table.getRowCount()+"\nnumero de columnas: "+table.getColumnCount());
        //int i1=0,j1=0;
        try {
            
            for (int i = 0; i < table.getRowCount(); i++) {
                //i1=i;
                for (int j = 0; j < table.getColumnCount(); j++) {
                  //  j1=j;
                    table.setValueAt(null, i, j);
                }
            }
            
        } catch (Exception e) {
            System.out.println("ERROR EN CLEARTABLE:  "+e);
        }
      
        if(lista!=null)
            while (!lista.isEmpty()) {
                lista.removeUltimoTexto();
            }
        
      }
    public void insertInTable(JTable table, ListaArrayDinamico lista, int n_textos) {
        resizeTable(table,n_textos);
        //System.out.println("N_TEXTOS: " + n_textos + "\nfilas de la tabla: " + table.getRowCount());
        
        if (this.invertir_tabla) {
            
            System.out.println("\n\n\nINVERTIDO");
            
                for (int i = n_textos-1; i >= 0; i--) {
                  
                    table.setValueAt(lista.get(i).getCodigo(), i, 0);
                    table.setValueAt(lista.get(i).getTitulo(), i, 1);
                    table.setValueAt(lista.get(i).getAutor(), i, 2);
                    table.setValueAt(lista.get(i).getFechaPublicacion(), i, 3);
                }

        } else {
            for (int i = 0; i < n_textos; i++) {
                table.setValueAt(lista.get(i).getCodigo(), i, 0);
                table.setValueAt(lista.get(i).getTitulo(), i, 1);
                table.setValueAt(lista.get(i).getAutor(), i, 2);
                table.setValueAt(lista.get(i).getFechaPublicacion(), i, 3);
            }
        }
    }

    private void resizeTable(JTable t,int n_textos){
        int n_rows=t.getRowCount();
        Object[] row = new Object[t.getColumnCount()];
        DefaultTableModel m=(DefaultTableModel)TABLABUSCAR.getModel();
        if(n_rows < n_textos){
           
           while(m.getRowCount()<n_textos)
               m.addRow(row);
           TABLABUSCAR.setModel(m);
        }else{
            while(m.getRowCount()>50)
                m.removeRow(0);
        }
        
        t.setModel(m);
        
    }
    
    public void insertInTable( JTable table,Texto[] txt) {
        resizeTable(table,txt.length);
      for (int i = 0; i < txt.length; i++){
          try {
              table.setValueAt(txt[i].getCodigo(), i, 0);
              table.setValueAt(txt[i].getTitulo(), i, 1);
              table.setValueAt(txt[i].getAutor(), i, 2);
              table.setValueAt(txt[i].getFechaPublicacion(), i, 3);
          } catch (Exception e) {
              System.out.println("ERROR EN TABLA:\ni: "+i+"\n"+e);
          }
      }
    }
    
    
    
    public static void removeLastRow( JTable table,ListaArrayDinamico lista) {
        lista.removeUltimoTexto();
        int size = lista.getSize();
      for (int i = 0; i < table.getColumnCount(); i++)
             table.setValueAt(null, size, i);
      }
    
    public static Object[] getLastRow( JTable table,ListaArrayDinamico lista){
        int count =table.getColumnCount();
        Object[] o = new Object[count];
          int size = lista.getSize()-1;
        for (int i = 0; i < count; i++){
             o[i]=table.getValueAt(size, i);
      }
        return o;
    }
    
    public static Object[] getRow( JTable table,int index){
        if(index>=table.getRowCount())
            return null;
        int count =table.getColumnCount();
        Object[] o = new Object[count];
        if(index>table.getRowCount())
            return null;
        for (int i = 0; i < count; i++){
             o[i]=table.getValueAt(index, i);
      }
        return o;
    }
    
    
    public static boolean equalsToLastRow(JTable table,ListaArrayDinamico lista,String titulo,String autor,String fecha,String idioma,String tema){
        if(lista.isEmpty())
            return false;
        int lrow= lista.getSize()-1;
        lista.setCapacidad(WIDTH);
        Object[] row = getLastRow(table,lista);
        String tit,aut,fech,idiom,tem;
        tit=(String)row[0];
        aut=(String)row[1];
        fech=(String)row[2];
        idiom=(String)row[4];
        tem=(String)row[5];  
        return(tit.equalsIgnoreCase(titulo) && aut.equalsIgnoreCase(autor) && fech.equals(fecha) && idiom.equals(idioma) && tem.equals(tema));
    }
    
    
        private void minimizar() {
            this.setState(JFrame.ICONIFIED);
        }
        
        private void checkCondiciones(){
            
            
            if(Launcher.CHECKarboles){
                this.CHECKguardarEnArboles.setSelected(true);
                this.CHECKguardarEnArboles.setEnabled(false);
            }
            if(Launcher.CHECKlistas){
                this.CHECKguardarEnListas.setSelected(true);
                this.CHECKguardarEnListas.setEnabled(false);
            }
            if(Launcher.seUsoCSV){
                this.CHECKguardarEnMySQL.setEnabled(false);
            }
                
            
            
        }
        
            private void pausa(int tiempo){ try { Thread.sleep(tiempo); } catch (Exception e) {
     System.out.println(e); } }
    
    
}

